{
	"info": {
		"_postman_id": "ee7c7092-4fc8-42ee-ab12-7d81fe31dbe1",
		"name": "ShoppersStack",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19963597"
	},
	"item": [
		{
			"name": "SSLogin",
			"item": [
				{
					"name": "shopperLogin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"}); //Status code validation\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"}); //Status code name validation\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"}); //Response time validation\r",
									"\r",
									"pm.test(\"Role\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.role).to.eql(\"SHOPPER\");\r",
									"}); //Role validation\r",
									"\r",
									"pm.test(\"emailID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.email).to.eql(\"ashwini.saravannavar29@gmail.com\");\r",
									"}); //Email id validation\r",
									"\r",
									"resBody=JSON.parse(pm.response.text()); //Parse JSON\r",
									"pm.environment.set(\"Token\", resBody.data.jwtToken); //capture and store for any new token \r",
									"\r",
									"pm.environment.set(\"shopperId\",resBody.data.userId); //capture and store shopperId\r",
									"pm.environment.set(\"zoneId\",resBody.data.zoneId); //capture and store zoneId\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{emailID}}\",\r\n  \"password\": \"{{pwd}}\",\r\n  \"role\": \"SHOPPER\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/users/login",
							"host": [
								"{{base url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "getShopperByID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}?shopperId={{shopperId}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}"
							],
							"query": [
								{
									"key": "shopperId",
									"value": "{{shopperId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Contains Login HTTP POST Method which lets user login into account using required credentials."
		},
		{
			"name": "View Product",
			"item": [
				{
					"name": "fetchDefaultProducts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"}); //Status code validation\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"}); //Status code name validation\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"}); //Response time validation"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/products/alpha?zoneId={{zoneId}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"products",
								"alpha"
							],
							"query": [
								{
									"key": "zoneId",
									"value": "{{zoneId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "fetchAllProducts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"}); //Status code validation\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"}); //Status code name validation\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"}); //Response time validation\r",
									"\r",
									"resBody=JSON.parse(pm.response.text()); //Parse JSON\r",
									"pm.environment.set(\"productId\", resBody.data[40].productId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "zoneId",
								"value": "ALPHA",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base url}}/products?zoneId={{zoneId}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "zoneId",
									"value": "{{zoneId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Wishlist",
			"item": [
				{
					"name": "addProductToWishlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Created\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": {{productId}},\r\n  \"quantity\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/wishlist",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"wishlist"
							]
						}
					},
					"response": []
				},
				{
					"name": "getProductsFromWishlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"}); //Status code validation\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"}); //Status code name validation\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"}); //Response time validation\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "shopperId",
								"value": "156599",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/wishlist",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"wishlist"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteProductFromWishlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has No Content\", function () {\r",
									"    pm.response.to.have.status(\"No Content\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/wishlist/{{productId}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"wishlist",
								"{{productId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cart",
			"item": [
				{
					"name": "addProductToCart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Created\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"resBody=JSON.parse(pm.response.text()); //Parse JSON\r",
									"\r",
									"pm.environment.set(\"itemId\",resBody.data.itemId); //capture and store itemId\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": {{productId}},\r\n  \"quantity\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/carts",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "getProductsFromCart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/carts",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateProductInCart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"productId\": {{productId}},\r\n  \"quantity\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/carts/{{itemId}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"carts",
								"{{itemId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteProductFromCart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/carts/{{productId}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"carts",
								"{{productId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Shopper Address",
			"item": [
				{
					"name": "getAllAddresses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/address",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"address"
							]
						}
					},
					"response": []
				},
				{
					"name": "addAddress",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Created\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									"pm.test(\"Type of Address\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.type).to.eql(\"Home\");\r",
									"});\r",
									"\r",
									"resBody=JSON.parse(pm.response.text()); //Parse JSON\r",
									"pm.environment.set(\"addressId\",resBody.data.addressId); //capture and store itemId\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"addressId\": 0,\r\n    \"buildingInfo\": \"\",\r\n    \"city\": \"Quepem\",\r\n    \"country\": \"India\",\r\n    \"landmark\": \"Near Someshwar temple\",\r\n    \"name\": \"Ashwini S.\",\r\n    \"phone\": \"9876543210\",\r\n    \"pincode\": \"403705\",\r\n    \"state\": \"Goa\",\r\n    \"streetInfo\": \"Sirvoi\",\r\n    \"type\": \"Home\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/address",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"address"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAddressById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/address/{{addressId}}?addressId={{addressId}}&shopperId={{shopperId}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"address",
								"{{addressId}}"
							],
							"query": [
								{
									"key": "addressId",
									"value": "{{addressId}}"
								},
								{
									"key": "shopperId",
									"value": "{{shopperId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateAddress",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									"pm.test(\"Building Info\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.buildingInfo).to.eql(\"Flat No. 42, 3rd Block\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"addressId\": {{addressId}},\r\n    \"buildingInfo\": \"Flat No. 42, 3rd Block\",\r\n    \"city\": \"Bangalore\",\r\n    \"country\": \"India\",\r\n    \"landmark\": \"Near Orion Mall\",\r\n    \"name\": \"Ashwini S.\",\r\n    \"phone\": \"+91-9876543210\",\r\n    \"pincode\": \"560010\",\r\n    \"state\": \"Karnataka\",\r\n    \"streetInfo\": \"8th Main Road, Rajajinagar\",\r\n    \"type\": \"Home\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/address/{{addressId}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"address",
								"{{addressId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAddress",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has No Content\", function () {\r",
									"    pm.response.to.have.status(\"No Content\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/address/{{addressId}}?addressId={{addressId}}&shopperId={{shopperId}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"address",
								"{{addressId}}"
							],
							"query": [
								{
									"key": "addressId",
									"value": "{{addressId}}"
								},
								{
									"key": "shopperId",
									"value": "{{shopperId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "getOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/orders",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "addOrderFromCart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"resBody=JSON.parse(pm.response.text()); //Parse JSON\r",
									"\r",
									"pm.environment.set(\"orderId\",resBody.data.orderId); //capture and store orderId\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has Created\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"address\": {\r\n        \"addressId\": {{addressId}}\r\n    },\r\n    \"paymentMode\": \"COD\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/orders",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateOrderDetailsToDelivered",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/orders/{{orderId}}?status=DELIVERED",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"orders",
								"{{orderId}}"
							],
							"query": [
								{
									"key": "status",
									"value": "DELIVERED"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getInvoiceCopy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/shoppers/{{shopperId}}/orders/{{orderId}}/invoice",
							"host": [
								"{{base url}}"
							],
							"path": [
								"shoppers",
								"{{shopperId}}",
								"orders",
								"{{orderId}}",
								"invoice"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product Review",
			"item": [
				{
					"name": "addReviewToDeliveredProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"resBody=JSON.parse(pm.response.text()); //Parse JSON\r",
									"\r",
									"pm.environment.set(\"reviewId\",resBody.data.reviewId); //capture and store reviewId\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dateTime\": \"2024-10-28T15:18:49.517Z\",\r\n    \"description\": \"Best Product\",\r\n    \"heading\": \"Great\",\r\n    \"rating\": 4.0,\r\n    \"shopperId\": {{shopperId}},\r\n    \"shopperName\": \"Ashwini S.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/reviews?productId={{productId}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"reviews"
							],
							"query": [
								{
									"key": "productId",
									"value": "{{productId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllReviewsOfProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base url}}/reviews/{{productId}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"reviews",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateAddedReview",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dateTime\": \"2024-11-04T07:10:49.481Z\",\r\n    \"description\": \"Best Product!!!!!!\",\r\n    \"heading\": \"Great\",\r\n    \"rating\": 4.0,\r\n    \"shopperId\": {{shopperId}},\r\n    \"shopperName\": \"Ashwini S.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base url}}/reviews/{{reviewId}}?productId={{productId}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"reviews",
								"{{reviewId}}"
							],
							"query": [
								{
									"key": "productId",
									"value": "{{productId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteReview",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									"pm.test(\"Review Deleted\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.eql(\"Deleted\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base url}}/reviews/{{reviewId}}?productId={{productId}}",
							"host": [
								"{{base url}}"
							],
							"path": [
								"reviews",
								"{{reviewId}}"
							],
							"query": [
								{
									"key": "productId",
									"value": "{{productId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}